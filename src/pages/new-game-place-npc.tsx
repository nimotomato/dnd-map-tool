import React, {
  MouseEvent as ReactMouseEvent,
  useRef,
  useState,
  useEffect,
} from "react";
import Head from "next/head";

import DungeonMap from "~/components/DungeonMap";
import Board from "~/components/Board";
import useGetMapRect from "../hooks/useGetMapRect";

import useTryLoadImg from "~/hooks/useTryLoadImg";
import { Spriteinfo, MapProps } from "~/types";
const defaultMap = "/img/dungeonmap.jpg";

const PlaceNpc = () => {
  const [sprites, setSprites] = useState<Array<Spriteinfo>>([]);
  // TO DO: Condense states into obj

  const [map, setMap] = useState<MapProps>({
    imgSrc: defaultMap,
    posX: 0,
    posY: 0,
    height: 25,
    width: 25,
    zoom: 6,
    hasLoaded: false,
  });

  const mapRef = useRef<HTMLDivElement | null>(null);
  const mapRect = useGetMapRect(map.imgSrc, mapRef);

  // Create sprites
  useEffect(() => {
    if (mapRect && !sprites?.length) {
      setSprites([
        {
          name: "goblin1",
          posX: 0,
          posY: 0,
          height: 0,
          width: 0,
          imgSrc: "/img/goblin.png",
          controller: "dm",
        },
        {
          name: "goblin2",
          posX: 50,
          posY: 0,
          height: 0,
          width: 0,
          imgSrc: "/img/goblin.png",
          controller: "dm",
        },
      ]);
    }
  }, [mapRect]);

  // SPRITE STUFF

  const [NPCNameInput, setNPCNameInput] = useState("");
  const [NPCSrcInput, setNPCSrcInput] = useState("");

  const handleOnLoadNPC = (e: ReactMouseEvent<HTMLButtonElement>) => {
    e.preventDefault();

    const newSprite: Spriteinfo = {
      name: `${NPCNameInput}`,
      posX: 0,
      posY: 0,
      height: 0,
      width: 0,
      imgSrc: `${NPCSrcInput}`,
      controller: "dm",
    };

    // Make sure name is unique
    if (sprites.some((sprite) => sprite.name === NPCNameInput)) {
      alert("Name already exists.");
      return;
    }

    if (NPCNameInput === "" || NPCSrcInput === "") {
      alert("invalid entry");
      return;
    }

    setSprites((prev) => [...prev, newSprite]);
    setNPCNameInput("");
    setNPCSrcInput("");
  };

  // has error might not work
  const hasError = useTryLoadImg(NPCSrcInput);

  const handleOnChangeNPCSrc = (e: React.ChangeEvent<HTMLInputElement>) => {
    setNPCSrcInput(e.target.value);
  };

  const handleOnChangeNPCName = (e: React.ChangeEvent<HTMLInputElement>) => {
    setNPCNameInput(e.target.value);
  };

  return (
    <>
      <Head>
        <title>DND map</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-slate-600">
        <div>NPC planner</div>
        <div className="m-6">
          <DungeonMap
            key={JSON.stringify(mapRect)}
            sprites={sprites}
            setSprites={setSprites}
            mapRef={mapRef}
            mapRect={mapRect}
            map={map}
            setMap={setMap}
          />
        </div>
        <form>
          <input
            onChange={handleOnChangeNPCName}
            value={NPCNameInput}
            placeholder="NPC name"
          />
          <input
            onChange={handleOnChangeNPCSrc}
            value={NPCSrcInput}
            placeholder="img url"
          />
          <button onClick={handleOnLoadNPC}>Load NPC</button>
        </form>
      </main>
    </>
  );
};

export default PlaceNpc;
