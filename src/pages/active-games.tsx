import Link from "next/link";
import { useSession } from "next-auth/react";
import Head from "next/head";

import { api } from "~/utils/api";

const ActiveGames = () => {
  const session = useSession();
  const currentUser = session.data?.user;

  // Get all games a user is in.
  const games = api.game.getGames.useQuery({ userId: currentUser?.id ?? "" });

  // Remove current user
  const removeUser = api.user.deleteUserFromGame.useMutation();

  // Delete the game
  const deleteGame = api.game.deleteGame.useMutation();

  // Delete game
  const handleOnDelete = (e: React.MouseEvent, game: string) => {
    deleteGame.mutate({ gameId: game });
    void games.refetch();
  };

  // Leave game
  const handleOnLeave = (e: React.MouseEvent, game: string) => {
    if (!currentUser?.id) return;

    removeUser.mutate({ gameId: game, controllerId: currentUser.id });
    void games.refetch();
  };

  return (
    <>
      <Head>
        <title>DND map</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-slate-600">
        <h1>Active games</h1>
        {/* Get API call for all games where user */}
        {games?.data && games.data.length > 0 ? (
          <ul>
            {games.data.map((game) => {
              console.log(game);
              return (
                <div key={game.Game.gameId}>
                  <li className="mb-3 grid grid-cols-4 gap-4">
                    {game.Game.name}
                    <Link
                      href={{
                        pathname: "/playing",
                        query: { data: JSON.stringify(game.Game.gameId) },
                      }}
                    >
                      <span>Join game</span>
                    </Link>
                    <button onClick={(e) => handleOnLeave(e, game.Game.gameId)}>
                      Leave game
                    </button>
                    {game.Game.dungeonMasterId === currentUser?.id && (
                      <button
                        onClick={(e) => handleOnDelete(e, game.Game.gameId)}
                      >
                        Delete game
                      </button>
                    )}
                  </li>
                </div>
              );
            })}
          </ul>
        ) : (
          <h2> No active games found. </h2>
        )}

        <Link href="/">Go back</Link>
      </main>
    </>
  );
};

export default ActiveGames;
